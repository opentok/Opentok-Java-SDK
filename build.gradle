import java.time.LocalDate

plugins {
    id 'java-library'
    id 'jacoco'
    id 'signing'
    id 'maven-publish'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id "com.github.hierynomus.license" version "0.16.1"
}

group = 'com.tokbox'
archivesBaseName = 'opentok-server-sdk'
version = '4.8.1'
sourceCompatibility = "1.8"
targetCompatibility = "1.8"

ext.githubPath = 'opentok/opentok-java-sdk'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.35.0'
    implementation 'commons-lang:commons-lang:2.6'
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'org.asynchttpclient:async-http-client:2.12.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'org.bitbucket.b_c:jose4j:0.9.3'
    implementation 'io.netty:netty-handler:4.1.89.Final'
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}

task javadocJar(type: Jar) {
    archiveClassifier.set("javadoc")
    from javadoc
}
javadoc {
    title = 'OpenTok Java SDK Reference'
    destinationDir = file('docs')
    exclude '**/util/**', '**/constants/**'
    options {
        locale 'en_US'
        setMemberLevel JavadocMemberLevel.PUBLIC
    }
}

jacoco {
    toolVersion = "0.8.8"
}
jacocoTestReport {
    reports {
        xml.getRequired().set(true)
        html.getRequired().set(true)
    }
}
check.dependsOn jacocoTestReport

java {
    withSourcesJar()
    withJavadocJar()
}

license {
    header rootProject.file('codequality/HEADER')
    ext.year = LocalDate.now().getYear()
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = "OpenTok Java SDK"
                artifactId = 'opentok-server-sdk'
                packaging = 'jar'
                description = "The OpenTok Java SDK lets you generate sessions and tokens for OpenTok applications. This version of the SDK also includes support for working with OpenTok 2.0 archives."
                url = "https://github.com/$githubPath"
                licenses {
                    license {
                        name = 'MIT License'
                        url = "https://raw.github.com/$githubPath/main/LICENCE.txt"
                    }
                }
                developers {
                    developer {
                        id = "devrel"
                        name = "Vonage Devrel"
                        email = "devrel@vonage.com"
                    }
                    developer {
                        id = 'manasdpradhan'
                        name = 'Manas Pradhan'
                        email = 'manas@tokbox.com'
                        organization = 'Vonage'
                    }
                    developer {
                        id = 'aoberoi'
                        name = 'Ankur Oberoi'
                        email = 'aoberoi@gmail.com'
                        organization = 'Vonage'
                    }
                    developer {
                        id = 'slorello89'
                        name =  'Steve Lorello'
                        email = 'steve.lorello@vonage.com'
                        organization = 'Vonage'
                    }
                    developer {
                        id = 'smadani'
                        name = 'Sina Madani'
                        email = 'sina.madani@vonage.com'
                        organization = 'Vonage'
                    }
                }
                scm {
                    connection = "scm:git@github.com/$githubPath"
                    developerConnection = "scm:git@github.com/$githubPath"
                    url = "https://github.com/$githubPath"
                }

                issueManagement {
                    system = "GitHub"
                    url = "https://github.com/$githubPath"
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username = System.getenv("OSS_USERNAME")
            password = System.getenv("OSS_PASSWORD")
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}
