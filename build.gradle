plugins {
    id "com.github.hierynomus.license" version "0.11.0"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'license'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'

group = 'com.tokbox'
archivesBaseName = 'opentok-server-sdk'
version = '4.5.0'

task javadocJar(type: Jar) {
    archiveClassifier.set("javadoc")
    from javadoc
}
javadoc {
    title = 'OpenTok Java SDK Reference'
    destinationDir = file('docs')
    exclude '**/util/**', '**/constants/**'
    options {
        locale 'en_US'
        setMemberLevel JavadocMemberLevel.PUBLIC
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '[4.3,5.0]'
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '[1.45,2.0]'
    compile group: 'commons-lang', name: 'commons-lang', version: '[2.6,3.0]'
    compile group: 'org.asynchttpclient', name: 'async-http-client', version: '[2.0,2.99999)'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '[2.3.1,2.99999)'
    compile group: 'commons-validator', name: 'commons-validator', version: '[1.4.0,1.99999)'
    compile group: 'commons-codec', name: 'commons-codec', version: '[1.9,1.99999]'
    compile group: 'org.bitbucket.b_c', name: 'jose4j', version: '[0.7,1.0)'
    // TODO: find out how to initialize these dependencies properly, or remove them
    //compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
    //compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.5'
}

license {
    header rootProject.file('codequality/HEADER')
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
}

artifacts {
    archives javadocJar, sourcesJar
}

ext.isReleaseVersion = hasProperty('isReleaseVersion') ? isReleaseVersion : false

ext.ossrhUsername = hasProperty('ossrhUsername') ? ossrhUsername : 'dummyuser'
ext.ossrhPassword = hasProperty('ossrhPassword') ? ossrhPassword : 'dummypass'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = "OpenTok Java SDK"
                artifactId = 'opentok-server-sdk'
                packaging = 'jar'
                description = "The OpenTok Java SDK lets you generate sessions and tokens for OpenTok applications. This version of the SDK also includes support for working with OpenTok 2.0 archives."
                url = "https://github.com/opentok/opentok-java-sdk"
                licenses {
                    license {
                        name = 'MIT License'
                        url = "https://raw.github.com/opentok/opentok-java-sdk/main/LICENCE.txt"
                    }
                }
                developers {
                    developer {
                        id = "devrel"
                        name = "Vonage Devrel"
                        email = "devrel@vonage.com"
                    }
                    developer {
                        id = 'manasdpradhan'
                        name = 'Manas Pradhan'
                        email = 'manas@tokbox.com'
                        organization = 'Vonage'
                    }
                    developer {
                        id = 'aoberoi'
                        name = 'Ankur Oberoi'
                        email = 'aoberoi@gmail.com'
                        organization = 'Vonage'
                    }
                    developer{
                        id = 'slorello89'
                        name =  'Steve Lorello'
                        email = 'steve.lorello@vonage.com'
                        organization = 'Vonage'
                    }
                }
                scm {
                    connection = "scm:git@github.com/opentok/opentok-java-sdk"
                    developerConnection = "scm:git@github.com/opentok/opentok-java-sdk"
                    url = "http://github.com/opentok/opentok-java-sdk"
                }

                issueManagement{
                    system = "GitHub"
                    url = "https://http://github.com/opentok/opentok-java-sdk"
                }
            }
        }
    }
    repositories{
        maven{
            def releasesRepoUrl = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
            def snapshotsRepoUrl = uri("https://oss.sonatype.org/content/repositories/snapshots/")
            credentials.username(System.getenv("OSS_USERNAME"))
            credentials.password(System.getenv("OSS_PASSWORD"))
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    def signingKey = System.getenv("signingKey")
    def signingPassword = System.getenv("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

test {
    maxHeapSize = "1024m"
}

sourceCompatibility = 1.8
// credit: http://stackoverflow.com/a/22681854/305340
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
    doFirst {
        if (System.env.JDK8_HOME != null) {
            options.bootClasspath = "$System.env.JDK8_HOME/jre/lib/rt.jar"
            options.bootClasspath += "$File.pathSeparator$System.env.JDK8_HOME/jre/lib/jce.jar"
            // and other specific JDK jars
        }
    }
}
